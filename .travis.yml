language: rust

sudo: required

rust:
  - nightly

cache:
  - cargo

script:
  - export CARGO_INCREMENTAL=0
  - export RUSTFLAGS="-Zprofile -Ccodegen-units=1 -Copt-level=0 -Clink-dead-code -Coverflow-checks=off -Zpanic_abort_tests -Cpanic=abort"
  - export RUSTDOCFLAGS="-Cpanic=abort"
  - RUSTC=rustc-proptest-fix cargo test --all $CARGO_OPTIONS
   - |
      zip -0 ccov.zip `find . \( -name "mole.gc*" \) -print`;
      ./grcov ccov.zip -s . -t lcov --llvm --branch --ignore-not-existing --ignore "/*" -o lcov.info;
      bash <(curl -s https://codecov.io/bash) -f lcov.info;

addons:
  apt:
    packages:
      - libcurl4-openssl-dev
      - libelf-dev
      - libdw-dev
      - cmake
      - gcc
      - binutils-dev
      - libiberty-dev
      - gfortran

before_install:
      - curl -L https://github.com/mozilla/grcov/releases/latest/download/grcov-linux-x86_64.tar.bz2 | tar jxf -


before_script: |
  wget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB &&
  sudo apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB &&
  sudo sh -c 'echo deb https://apt.repos.intel.com/mkl all main > /etc/apt/sources.list.d/intel-mkl.list' &&
  sudo apt-get update &&
  sudo apt-get install intel-mkl-64bit-2018.2-046 &&
  source /opt/intel/parallel_studio_xe_2018/compilers_and_libraries_2018/linux/bin/compilervars_global.sh intel64 &&
  wget https://gist.githubusercontent.com/jix/4342dd522a7125a2803c6edeedd8735c/raw/8c9fbe63bee722ff484215479e836ab714de1b9b/rustc-proptest-fix &&
  chmod +x rustc-proptest-fix &&
  PATH=$PATH:$(pwd)

  #after_success: |
  #  wget https://github.com/SimonKagstrom/kcov/archive/master.tar.gz &&
  #  tar xzf master.tar.gz &&
  #  cd kcov-master &&
  #  mkdir build &&
  #  cd build &&
  #  cmake .. &&
  #  make &&
  #  make install DESTDIR=../../kcov-build &&
  #  cd ../.. &&
  #  rm -rf kcov-master &&
  #  for file in target/debug/*-*[^\.d]; do mkdir -p "target/cov/$(basename $file)"; ./kcov-build/usr/local/bin/kcov --exclude-pattern=/.cargo,/usr/lib --verify "target/cov/$(basename $file)" "$file"; done &&
  #  bash <(curl -s https://codecov.io/bash) &&
  #  echo "Uploaded code coverage"

env:
  - RUSTFLAGS="-C link-dead-code"
